// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSource {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class CompletionItem : GLib.Object, GtkSource.ICompletionProposal {

		public CompletionItem (IntPtr raw) : base(raw) {}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_item_new();
		static d_gtk_source_completion_item_new gtk_source_completion_item_new = FuncLoader.LoadFunction<d_gtk_source_completion_item_new>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_new"));

		public CompletionItem () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (CompletionItem)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			owned = true;
			Raw = gtk_source_completion_item_new();
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_label(IntPtr raw, IntPtr label);
		static d_gtk_source_completion_item_set_label gtk_source_completion_item_set_label = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_label>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_label"));

		[GLib.Property ("label")]
		public string Label {
			get {
				GLib.Value val = GetProperty ("label");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtk_source_completion_item_set_label(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_markup(IntPtr raw, IntPtr markup);
		static d_gtk_source_completion_item_set_markup gtk_source_completion_item_set_markup = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_markup>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_markup"));

		[GLib.Property ("markup")]
		public string Markup {
			get {
				GLib.Value val = GetProperty ("markup");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtk_source_completion_item_set_markup(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_text(IntPtr raw, IntPtr text);
		static d_gtk_source_completion_item_set_text gtk_source_completion_item_set_text = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_text>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_text"));

		[GLib.Property ("text")]
		public string Text {
			get {
				GLib.Value val = GetProperty ("text");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtk_source_completion_item_set_text(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_icon(IntPtr raw, IntPtr icon);
		static d_gtk_source_completion_item_set_icon gtk_source_completion_item_set_icon = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_icon>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_icon"));

		[GLib.Property ("icon")]
		public Gdk.Pixbuf Icon {
			get {
				GLib.Value val = GetProperty ("icon");
				Gdk.Pixbuf ret = (Gdk.Pixbuf) val;
				val.Dispose ();
				return ret;
			}
			set  {
				gtk_source_completion_item_set_icon(Handle, value == null ? IntPtr.Zero : value.Handle);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_icon_name(IntPtr raw, IntPtr icon_name);
		static d_gtk_source_completion_item_set_icon_name gtk_source_completion_item_set_icon_name = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_icon_name>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_icon_name"));

		[GLib.Property ("icon-name")]
		public string IconName {
			get {
				GLib.Value val = GetProperty ("icon-name");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtk_source_completion_item_set_icon_name(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_gicon(IntPtr raw, IntPtr gicon);
		static d_gtk_source_completion_item_set_gicon gtk_source_completion_item_set_gicon = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_gicon>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_gicon"));

		[GLib.Property ("gicon")]
		public GLib.IIcon Gicon {
			get {
				GLib.Value val = GetProperty ("gicon");
				GLib.IIcon ret = GLib.IconAdapter.GetObject ((GLib.Object) val);
				val.Dispose ();
				return ret;
			}
			set  {
				gtk_source_completion_item_set_gicon(Handle, value == null ? IntPtr.Zero : ((value is GLib.Object) ? (value as GLib.Object).Handle : (value as GLib.IconAdapter).Handle));
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_item_set_info(IntPtr raw, IntPtr info);
		static d_gtk_source_completion_item_set_info gtk_source_completion_item_set_info = FuncLoader.LoadFunction<d_gtk_source_completion_item_set_info>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_set_info"));

		[GLib.Property ("info")]
		public string Info {
			get {
				GLib.Value val = GetProperty ("info");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtk_source_completion_item_set_info(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("padding"
							, GLib.Object.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 10 // padding
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_item_get_type();
		static d_gtk_source_completion_item_get_type gtk_source_completion_item_get_type = FuncLoader.LoadFunction<d_gtk_source_completion_item_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_item_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_source_completion_item_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_source_completion_proposal_changed(IntPtr raw);
		static d_gtk_source_completion_proposal_changed gtk_source_completion_proposal_changed = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_changed>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_changed"));

		public void Changed() {
			gtk_source_completion_proposal_changed(Handle);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate bool d_gtk_source_completion_proposal_equal(IntPtr raw, IntPtr other);
		static d_gtk_source_completion_proposal_equal gtk_source_completion_proposal_equal = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_equal>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_equal"));

		public bool Equal(GtkSource.ICompletionProposal other) {
			bool raw_ret = gtk_source_completion_proposal_equal(Handle, other == null ? IntPtr.Zero : ((other is GLib.Object) ? (other as GLib.Object).Handle : (other as GtkSource.CompletionProposalAdapter).Handle));
			bool ret = raw_ret;
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_gicon(IntPtr raw);
		static d_gtk_source_completion_proposal_get_gicon gtk_source_completion_proposal_get_gicon = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_gicon>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_gicon"));

		GLib.IIcon GtkSource.ICompletionProposal.Gicon { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_gicon(Handle);
				GLib.IIcon ret = GLib.IconAdapter.GetObject (raw_ret, false);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_icon(IntPtr raw);
		static d_gtk_source_completion_proposal_get_icon gtk_source_completion_proposal_get_icon = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_icon>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_icon"));

		Gdk.Pixbuf GtkSource.ICompletionProposal.Icon { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_icon(Handle);
				Gdk.Pixbuf ret = GLib.Object.GetObject(raw_ret) as Gdk.Pixbuf;
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_icon_name(IntPtr raw);
		static d_gtk_source_completion_proposal_get_icon_name gtk_source_completion_proposal_get_icon_name = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_icon_name>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_icon_name"));

		string GtkSource.ICompletionProposal.IconName { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_icon_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_info(IntPtr raw);
		static d_gtk_source_completion_proposal_get_info gtk_source_completion_proposal_get_info = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_info>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_info"));

		string GtkSource.ICompletionProposal.Info { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_info(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_label(IntPtr raw);
		static d_gtk_source_completion_proposal_get_label gtk_source_completion_proposal_get_label = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_label>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_label"));

		string GtkSource.ICompletionProposal.Label { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_label(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_markup(IntPtr raw);
		static d_gtk_source_completion_proposal_get_markup gtk_source_completion_proposal_get_markup = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_markup>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_markup"));

		string GtkSource.ICompletionProposal.Markup { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_markup(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_source_completion_proposal_get_text(IntPtr raw);
		static d_gtk_source_completion_proposal_get_text gtk_source_completion_proposal_get_text = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_get_text>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_get_text"));

		string GtkSource.ICompletionProposal.Text { 
			get {
				IntPtr raw_ret = gtk_source_completion_proposal_get_text(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate uint d_gtk_source_completion_proposal_hash(IntPtr raw);
		static d_gtk_source_completion_proposal_hash gtk_source_completion_proposal_hash = FuncLoader.LoadFunction<d_gtk_source_completion_proposal_hash>(FuncLoader.GetProcAddress(GLibrary.Load(Library.GtkSource), "gtk_source_completion_proposal_hash"));

		public uint Hash() {
			uint raw_ret = gtk_source_completion_proposal_hash(Handle);
			uint ret = raw_ret;
			return ret;
		}

		[GLib.Signal("changed")]
		public event System.EventHandler EmitChanged {
			add {
				this.AddSignalHandler ("changed", value);
			}
			remove {
				this.RemoveSignalHandler ("changed", value);
			}
		}

		static EmitChangedNativeDelegate EmitChanged_cb_delegate;
		static EmitChangedNativeDelegate EmitChangedVMCallback {
			get {
				if (EmitChanged_cb_delegate == null)
					EmitChanged_cb_delegate = new EmitChangedNativeDelegate (EmitChanged_cb);
				return EmitChanged_cb_delegate;
			}
		}

		static void OverrideEmitChanged (GLib.GType gtype)
		{
			OverrideEmitChanged (gtype, EmitChangedVMCallback);
		}

		static void OverrideEmitChanged (GLib.GType gtype, EmitChangedNativeDelegate callback)
		{
			OverrideVirtualMethod (gtype, "changed", callback);
		}
		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void EmitChangedNativeDelegate (IntPtr inst);

		static void EmitChanged_cb (IntPtr inst)
		{
			try {
				GtkSource.CompletionItem __obj = GLib.Object.GetObject (inst, false) as GtkSource.CompletionItem;
				__obj.OnEmitChanged ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GtkSource.CompletionItem), ConnectionMethod="OverrideEmitChanged")]
		protected virtual void OnEmitChanged ()
		{
			InternalEmitChanged ();
		}

		private void InternalEmitChanged ()
		{
			GLib.Value ret = GLib.Value.Empty;
			GLib.ValueArray inst_and_params = new GLib.ValueArray (1);
			GLib.Value[] vals = new GLib.Value [1];
			vals [0] = new GLib.Value (this);
			inst_and_params.Append (vals [0]);
			g_signal_chain_from_overridden (inst_and_params.ArrayPtr, ref ret);
			foreach (GLib.Value v in vals)
				v.Dispose ();
		}


		static CompletionItem ()
		{
			GtkSharp.GtkSourceSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, GLib.Object.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
