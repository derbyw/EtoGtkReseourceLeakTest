// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Atk {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[GLib.GType (typeof (Atk.StateTypeGType))]
	public enum StateType {

		Invalid,
		Active,
		Armed,
		Busy,
		Checked,
		Defunct,
		Editable,
		Enabled,
		Expandable,
		Expanded,
		Focusable,
		Focused,
		Horizontal,
		Iconified,
		Modal,
		MultiLine,
		Multiselectable,
		Opaque,
		Pressed,
		Resizable,
		Selectable,
		Selected,
		Sensitive,
		Showing,
		SingleLine,
		Stale,
		Transient,
		Vertical,
		Visible,
		ManagesDescendants,
		Indeterminate,
		Truncated,
		Required,
		InvalidEntry,
		SupportsAutocompletion,
		SelectableText,
		Default,
		Animated,
		Visited,
		Checkable,
		HasPopup,
		HasTooltip,
		ReadOnly,
		LastDefined,
	}

	internal class StateTypeGType {
		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_atk_state_type_get_type();
		static d_atk_state_type_get_type atk_state_type_get_type = FuncLoader.LoadFunction<d_atk_state_type_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Atk), "atk_state_type_get_type"));

		public static GLib.GType GType {
			get {
				return new GLib.GType (atk_state_type_get_type ());
			}
		}
	}
#endregion
}
