// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Atk {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class Focus {

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_atk_focus_tracker_init(AtkSharp.EventListenerInitNative init);
		static d_atk_focus_tracker_init atk_focus_tracker_init = FuncLoader.LoadFunction<d_atk_focus_tracker_init>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Atk), "atk_focus_tracker_init"));

		[Obsolete]
		public static void TrackerInit(Atk.EventListenerInit init) {
			AtkSharp.EventListenerInitWrapper init_wrapper = new AtkSharp.EventListenerInitWrapper (init);
			atk_focus_tracker_init(init_wrapper.NativeDelegate);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_atk_focus_tracker_notify(IntPtr objekt);
		static d_atk_focus_tracker_notify atk_focus_tracker_notify = FuncLoader.LoadFunction<d_atk_focus_tracker_notify>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Atk), "atk_focus_tracker_notify"));

		[Obsolete]
		public static void TrackerNotify(Atk.Object objekt) {
			atk_focus_tracker_notify(objekt == null ? IntPtr.Zero : objekt.Handle);
		}

#endregion
	}
}
