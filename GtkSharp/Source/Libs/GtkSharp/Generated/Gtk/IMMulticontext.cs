// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class IMMulticontext : Gtk.IMContext {

		public IMMulticontext (IntPtr raw) : base(raw) {}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_im_multicontext_new();
		static d_gtk_im_multicontext_new gtk_im_multicontext_new = FuncLoader.LoadFunction<d_gtk_im_multicontext_new>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_im_multicontext_new"));

		public IMMulticontext () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (IMMulticontext)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			owned = true;
			Raw = gtk_im_multicontext_new();
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_gtk_reserved1"
							, Gtk.IMContext.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved1
							, null
							, "_gtk_reserved2"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved2"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved2
							, "_gtk_reserved1"
							, "_gtk_reserved3"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved3"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved3
							, "_gtk_reserved2"
							, "_gtk_reserved4"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved4"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved4
							, "_gtk_reserved3"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_im_multicontext_append_menuitems(IntPtr raw, IntPtr menushell);
		static d_gtk_im_multicontext_append_menuitems gtk_im_multicontext_append_menuitems = FuncLoader.LoadFunction<d_gtk_im_multicontext_append_menuitems>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_im_multicontext_append_menuitems"));

		[Obsolete]
		public void AppendMenuitems(Gtk.MenuShell menushell) {
			gtk_im_multicontext_append_menuitems(Handle, menushell == null ? IntPtr.Zero : menushell.Handle);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_im_multicontext_get_context_id(IntPtr raw);
		static d_gtk_im_multicontext_get_context_id gtk_im_multicontext_get_context_id = FuncLoader.LoadFunction<d_gtk_im_multicontext_get_context_id>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_im_multicontext_get_context_id"));

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_im_multicontext_set_context_id(IntPtr raw, IntPtr context_id);
		static d_gtk_im_multicontext_set_context_id gtk_im_multicontext_set_context_id = FuncLoader.LoadFunction<d_gtk_im_multicontext_set_context_id>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_im_multicontext_set_context_id"));

		public string ContextId { 
			get {
				IntPtr raw_ret = gtk_im_multicontext_get_context_id(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
			set {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtk_im_multicontext_set_context_id(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_im_multicontext_get_type();
		static d_gtk_im_multicontext_get_type gtk_im_multicontext_get_type = FuncLoader.LoadFunction<d_gtk_im_multicontext_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_im_multicontext_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_im_multicontext_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, Gtk.IMContext.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
