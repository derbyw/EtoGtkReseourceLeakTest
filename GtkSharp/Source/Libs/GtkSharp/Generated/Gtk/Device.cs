// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class Device {

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_device_grab_add(IntPtr widget, IntPtr device, bool block_others);
		static d_gtk_device_grab_add gtk_device_grab_add = FuncLoader.LoadFunction<d_gtk_device_grab_add>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_device_grab_add"));

		public static void GrabAdd(Gtk.Widget widget, Gdk.Device device, bool block_others) {
			gtk_device_grab_add(widget == null ? IntPtr.Zero : widget.Handle, device == null ? IntPtr.Zero : device.Handle, block_others);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_device_grab_remove(IntPtr widget, IntPtr device);
		static d_gtk_device_grab_remove gtk_device_grab_remove = FuncLoader.LoadFunction<d_gtk_device_grab_remove>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_device_grab_remove"));

		public static void GrabRemove(Gtk.Widget widget, Gdk.Device device) {
			gtk_device_grab_remove(widget == null ? IntPtr.Zero : widget.Handle, device == null ? IntPtr.Zero : device.Handle);
		}

#endregion
	}
}
