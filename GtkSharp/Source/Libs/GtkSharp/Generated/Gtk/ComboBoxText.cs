// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class ComboBoxText : Gtk.ComboBox {

		public ComboBoxText (IntPtr raw) : base(raw) {}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_combo_box_text_new();
		static d_gtk_combo_box_text_new gtk_combo_box_text_new = FuncLoader.LoadFunction<d_gtk_combo_box_text_new>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_new"));

		public ComboBoxText () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (ComboBoxText)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			owned = true;
			Raw = gtk_combo_box_text_new();
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_combo_box_text_new_with_entry();
		static d_gtk_combo_box_text_new_with_entry gtk_combo_box_text_new_with_entry = FuncLoader.LoadFunction<d_gtk_combo_box_text_new_with_entry>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_new_with_entry"));

		public static new ComboBoxText NewWithEntry()
		{
			ComboBoxText result = new ComboBoxText (gtk_combo_box_text_new_with_entry());
			return result;
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_gtk_reserved1"
							, Gtk.ComboBox.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved1
							, null
							, "_gtk_reserved2"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved2"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved2
							, "_gtk_reserved1"
							, "_gtk_reserved3"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved3"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved3
							, "_gtk_reserved2"
							, "_gtk_reserved4"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved4"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved4
							, "_gtk_reserved3"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_append(IntPtr raw, IntPtr id, IntPtr text);
		static d_gtk_combo_box_text_append gtk_combo_box_text_append = FuncLoader.LoadFunction<d_gtk_combo_box_text_append>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_append"));

		public void Append(string id, string text) {
			IntPtr native_id = GLib.Marshaller.StringToPtrGStrdup (id);
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			gtk_combo_box_text_append(Handle, native_id, native_text);
			GLib.Marshaller.Free (native_id);
			GLib.Marshaller.Free (native_text);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_append_text(IntPtr raw, IntPtr text);
		static d_gtk_combo_box_text_append_text gtk_combo_box_text_append_text = FuncLoader.LoadFunction<d_gtk_combo_box_text_append_text>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_append_text"));

		public void AppendText(string text) {
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			gtk_combo_box_text_append_text(Handle, native_text);
			GLib.Marshaller.Free (native_text);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_combo_box_text_get_active_text(IntPtr raw);
		static d_gtk_combo_box_text_get_active_text gtk_combo_box_text_get_active_text = FuncLoader.LoadFunction<d_gtk_combo_box_text_get_active_text>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_get_active_text"));

		public string ActiveText { 
			get {
				IntPtr raw_ret = gtk_combo_box_text_get_active_text(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_gtk_combo_box_text_get_type();
		static d_gtk_combo_box_text_get_type gtk_combo_box_text_get_type = FuncLoader.LoadFunction<d_gtk_combo_box_text_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_combo_box_text_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_insert(IntPtr raw, int position, IntPtr id, IntPtr text);
		static d_gtk_combo_box_text_insert gtk_combo_box_text_insert = FuncLoader.LoadFunction<d_gtk_combo_box_text_insert>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_insert"));

		public void Insert(int position, string id, string text) {
			IntPtr native_id = GLib.Marshaller.StringToPtrGStrdup (id);
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			gtk_combo_box_text_insert(Handle, position, native_id, native_text);
			GLib.Marshaller.Free (native_id);
			GLib.Marshaller.Free (native_text);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_insert_text(IntPtr raw, int position, IntPtr text);
		static d_gtk_combo_box_text_insert_text gtk_combo_box_text_insert_text = FuncLoader.LoadFunction<d_gtk_combo_box_text_insert_text>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_insert_text"));

		public void InsertText(int position, string text) {
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			gtk_combo_box_text_insert_text(Handle, position, native_text);
			GLib.Marshaller.Free (native_text);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_prepend(IntPtr raw, IntPtr id, IntPtr text);
		static d_gtk_combo_box_text_prepend gtk_combo_box_text_prepend = FuncLoader.LoadFunction<d_gtk_combo_box_text_prepend>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_prepend"));

		public void Prepend(string id, string text) {
			IntPtr native_id = GLib.Marshaller.StringToPtrGStrdup (id);
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			gtk_combo_box_text_prepend(Handle, native_id, native_text);
			GLib.Marshaller.Free (native_id);
			GLib.Marshaller.Free (native_text);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_prepend_text(IntPtr raw, IntPtr text);
		static d_gtk_combo_box_text_prepend_text gtk_combo_box_text_prepend_text = FuncLoader.LoadFunction<d_gtk_combo_box_text_prepend_text>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_prepend_text"));

		public void PrependText(string text) {
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			gtk_combo_box_text_prepend_text(Handle, native_text);
			GLib.Marshaller.Free (native_text);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_remove(IntPtr raw, int position);
		static d_gtk_combo_box_text_remove gtk_combo_box_text_remove = FuncLoader.LoadFunction<d_gtk_combo_box_text_remove>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_remove"));

		public void Remove(int position) {
			gtk_combo_box_text_remove(Handle, position);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_gtk_combo_box_text_remove_all(IntPtr raw);
		static d_gtk_combo_box_text_remove_all gtk_combo_box_text_remove_all = FuncLoader.LoadFunction<d_gtk_combo_box_text_remove_all>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gtk), "gtk_combo_box_text_remove_all"));

		public void RemoveAll() {
			gtk_combo_box_text_remove_all(Handle);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, Gtk.ComboBox.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
