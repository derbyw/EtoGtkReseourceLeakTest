// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;
	using static GLib.AbiStructExtension;

#region Autogenerated code
	public partial class InetSocketAddress : GLib.SocketAddress, GLib.ISocketConnectable {

		public InetSocketAddress (IntPtr raw) : base(raw) {}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_inet_socket_address_new(IntPtr address, ushort port);
		static d_g_inet_socket_address_new g_inet_socket_address_new = FuncLoader.LoadFunction<d_g_inet_socket_address_new>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_new"));

		public InetSocketAddress (GLib.InetAddress address, ushort port) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InetSocketAddress)) {
				var vals = new List<GLib.Value> ();
				var names = new List<string> ();
				if (address != null) {
					names.Add ("address");
					vals.Add (new GLib.Value (address));
				}
				names.Add ("port");
				vals.Add (new GLib.Value (port));
				CreateNativeObject (names.ToArray (), vals.ToArray ());
				return;
			}
			owned = true;
			Raw = g_inet_socket_address_new(address == null ? IntPtr.Zero : address.Handle, port);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_inet_socket_address_new_from_string(IntPtr address, uint port);
		static d_g_inet_socket_address_new_from_string g_inet_socket_address_new_from_string = FuncLoader.LoadFunction<d_g_inet_socket_address_new_from_string>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_new_from_string"));

		public InetSocketAddress (string address, uint port) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InetSocketAddress)) {
				var vals = new List<GLib.Value> ();
				var names = new List<string> ();
				names.Add ("address");
				vals.Add (new GLib.Value (address));
				names.Add ("port");
				vals.Add (new GLib.Value (port));
				CreateNativeObject (names.ToArray (), vals.ToArray ());
				return;
			}
			IntPtr native_address = GLib.Marshaller.StringToPtrGStrdup (address);
			owned = true;
			Raw = g_inet_socket_address_new_from_string(native_address, port);
			GLib.Marshaller.Free (native_address);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_inet_socket_address_get_address(IntPtr raw);
		static d_g_inet_socket_address_get_address g_inet_socket_address_get_address = FuncLoader.LoadFunction<d_g_inet_socket_address_get_address>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_get_address"));

		[GLib.Property ("address")]
		public GLib.InetAddress Address {
			get  {
				IntPtr raw_ret = g_inet_socket_address_get_address(Handle);
				GLib.InetAddress ret = GLib.Object.GetObject(raw_ret) as GLib.InetAddress;
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate ushort d_g_inet_socket_address_get_port(IntPtr raw);
		static d_g_inet_socket_address_get_port g_inet_socket_address_get_port = FuncLoader.LoadFunction<d_g_inet_socket_address_get_port>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_get_port"));

		[GLib.Property ("port")]
		public ushort Port {
			get  {
				ushort raw_ret = g_inet_socket_address_get_port(Handle);
				ushort ret = raw_ret;
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate uint d_g_inet_socket_address_get_flowinfo(IntPtr raw);
		static d_g_inet_socket_address_get_flowinfo g_inet_socket_address_get_flowinfo = FuncLoader.LoadFunction<d_g_inet_socket_address_get_flowinfo>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_get_flowinfo"));

		[GLib.Property ("flowinfo")]
		public uint Flowinfo {
			get  {
				uint raw_ret = g_inet_socket_address_get_flowinfo(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate uint d_g_inet_socket_address_get_scope_id(IntPtr raw);
		static d_g_inet_socket_address_get_scope_id g_inet_socket_address_get_scope_id = FuncLoader.LoadFunction<d_g_inet_socket_address_get_scope_id>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_get_scope_id"));

		[GLib.Property ("scope-id")]
		public uint ScopeId {
			get  {
				uint raw_ret = g_inet_socket_address_get_scope_id(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (GLib.SocketAddress.class_abi.Fields);

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_inet_socket_address_get_type();
		static d_g_inet_socket_address_get_type g_inet_socket_address_get_type = FuncLoader.LoadFunction<d_g_inet_socket_address_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_inet_socket_address_get_type"));

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = g_inet_socket_address_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_socket_connectable_enumerate(IntPtr raw);
		static d_g_socket_connectable_enumerate g_socket_connectable_enumerate = FuncLoader.LoadFunction<d_g_socket_connectable_enumerate>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_socket_connectable_enumerate"));

		public GLib.SocketAddressEnumerator Enumerate() {
			IntPtr raw_ret = g_socket_connectable_enumerate(Handle);
			GLib.SocketAddressEnumerator ret = GLib.Object.GetObject(raw_ret) as GLib.SocketAddressEnumerator;
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_socket_connectable_proxy_enumerate(IntPtr raw);
		static d_g_socket_connectable_proxy_enumerate g_socket_connectable_proxy_enumerate = FuncLoader.LoadFunction<d_g_socket_connectable_proxy_enumerate>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_socket_connectable_proxy_enumerate"));

		public GLib.SocketAddressEnumerator ProxyEnumerate() {
			IntPtr raw_ret = g_socket_connectable_proxy_enumerate(Handle);
			GLib.SocketAddressEnumerator ret = GLib.Object.GetObject(raw_ret) as GLib.SocketAddressEnumerator;
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_g_socket_connectable_to_string(IntPtr raw);
		static d_g_socket_connectable_to_string g_socket_connectable_to_string = FuncLoader.LoadFunction<d_g_socket_connectable_to_string>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Gio), "g_socket_connectable_to_string"));

		public override string ToString() {
			IntPtr raw_ret = g_socket_connectable_to_string(Handle);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			return ret;
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, GLib.SocketAddress.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
